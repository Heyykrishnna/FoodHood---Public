// This file is automatically generated. Do not edit it directly.
import { createClient, type SupabaseClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = import.meta.env.VITE_SUPABASE_URL;
const SUPABASE_PUBLISHABLE_KEY = import.meta.env.VITE_SUPABASE_PUBLISHABLE_KEY;

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

let client: SupabaseClient<Database>;

if (typeof SUPABASE_URL === 'string' && SUPABASE_URL && typeof SUPABASE_PUBLISHABLE_KEY === 'string' && SUPABASE_PUBLISHABLE_KEY) {
  client = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
    auth: {
      storage: localStorage,
      persistSession: true,
      autoRefreshToken: true,
    }
  });
} else {
  // Defer throwing until the client is actually used, to avoid crashing on import
  const missingVars = [
    !SUPABASE_URL ? 'VITE_SUPABASE_URL' : undefined,
    !SUPABASE_PUBLISHABLE_KEY ? 'VITE_SUPABASE_PUBLISHABLE_KEY' : undefined,
  ].filter(Boolean).join(', ');

  console.error(`[Supabase] Missing required environment variables: ${missingVars}. Add them to your .env file.`);

  client = new Proxy({} as SupabaseClient<Database>, {
    get() {
      throw new Error(`[Supabase] Missing required environment variables: ${missingVars}. Define VITE_SUPABASE_URL and VITE_SUPABASE_PUBLISHABLE_KEY in a .env file at the project root.`);
    },
  });
}

export const supabase = client;